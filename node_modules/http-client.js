var Init,
  instance,
  face;
Init = function(){
  var self = this;
  self._http = require('http');
  self._url  = require('url');
};
Init.prototype = {
  _prepare:function(query,params){
    var self = this;
    if(typeof(query)=='string'){
      if(!query.match(/^https?:\/\//))
        query = 'http://' + query;
      query = self._url.parse(query);
    }
    if(params){
      var paramsArr = [];
      for(var key in params){
        paramsArr.push(key+'='+encodeURIComponent(params[key]));
      }
      params = paramsArr.join('&');
      query.path += (/\?/.test(query.path) ? '&' : '?') + params;
    }
    return query;
  },
  get:function(query,params,callback){
    var self = this;
    if(typeof(params) == 'function'){
      callback = params;
      params = null;
    }
    query = self._prepare(query,params);
    var chunks = [], bodyLength = 0;
    self._http.get(query,function(res){
      res.on('data',function(chunk){
        bodyLength += chunk.length;
        chunks.push(chunk);
      })
      res.on('end',function(){
        var content = new Buffer(bodyLength), cursor = 0;
        for(var key in chunks){
          chunks[key].copy(content,cursor,0);
          cursor += chunks[key].length;
        }
        callback(content.toString());
      })
    })
  },
}
instance = new Init();
module.exports = instance.get.bind(instance);
